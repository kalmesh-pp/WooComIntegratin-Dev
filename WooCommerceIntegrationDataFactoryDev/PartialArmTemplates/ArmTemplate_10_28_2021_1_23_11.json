{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "WooCommerceIntegrationDataFactoryDev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyCustomers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SFTP to tempCustomer",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/customer-export.xml"
							},
							{
								"name": "Destination",
								"value": "dbo.Temp_BillingCustomer"
							}
						],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table dbo.Temp_BillingCustomer"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Customer_ID']"
										},
										"sink": {
											"name": "WC_CustomerId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Terms_Code']"
										},
										"sink": {
											"name": "WC_TermsCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Ship_Code']"
										},
										"sink": {
											"name": "WC_ShipCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Salesman']"
										},
										"sink": {
											"name": "WC_Salesman",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Tax_Code']"
										},
										"sink": {
											"name": "WC_TaxCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Price_Code']"
										},
										"sink": {
											"name": "WC_PriceCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Bill_To_ID']"
										},
										"sink": {
											"name": "WC_BillToID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_First_Name']"
										},
										"sink": {
											"name": "WC_BillingFirstName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Last_Name']"
										},
										"sink": {
											"name": "WC_BillingLastName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Address_1']"
										},
										"sink": {
											"name": "WC_BillingAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_State']"
										},
										"sink": {
											"name": "WC_BillingState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Postcode']"
										},
										"sink": {
											"name": "WC_BillingPostcode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Country']"
										},
										"sink": {
											"name": "WC_BillingCountry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Email']"
										},
										"sink": {
											"name": "WC_BillingEmail",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Phone']"
										},
										"sink": {
											"name": "WC_BillingPhone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_City']"
										},
										"sink": {
											"name": "WC_BillingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Shipping']"
										},
										"sink": {
											"name": "JSON_Shipping",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Customers']['Customer']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_SFTP",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTableTemp_BillingCustomer",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update Customer And ShipToTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SFTP to tempCustomer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateCustomerAndShipTo]"
						},
						"linkedServiceName": {
							"referenceName": "KalmeshPC_SQLserver",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Billing Customers",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Customer And ShipToTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateBillingCustomers]"
						},
						"linkedServiceName": {
							"referenceName": "KalmeshPC_SQLserver",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Customer And ShipTo",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update Billing Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateCustomerAndShipTo]"
						},
						"linkedServiceName": {
							"referenceName": "KalmeshPC_SQLserver",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Archive and Delete Customer File",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Customer And ShipTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "SftpWriteSettings",
									"operationTimeout": "01:00:00",
									"useTempFileRename": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CustomerInputFile",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerFileArchive",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CustomerInputFile')]",
				"[concat(variables('factoryId'), '/datasets/CustomerFileArchive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyOrderPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Order Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table [dbo].[Temp_Order]"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Order_Number']"
										},
										"sink": {
											"name": "WC_OrderID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Order_Status']"
										},
										"sink": {
											"name": "WC_OrderStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Order_Date']"
										},
										"sink": {
											"name": "WC_Order_Date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Customer_Note']"
										},
										"sink": {
											"name": "WC_Note",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Bill_To_ID']"
										},
										"sink": {
											"name": "WC_CustomerBillToID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Ship_To_ID']"
										},
										"sink": {
											"name": "WC_CustomerShipToID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Ship_Code']"
										},
										"sink": {
											"name": "WC_ShipCode"
										}
									},
									{
										"source": {
											"path": "[['Salesman']"
										},
										"sink": {
											"name": "WC_Slsman",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Uf_Order_Code']"
										},
										"sink": {
											"name": "WC_OrderCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing_Email']"
										},
										"sink": {
											"name": "WC_Sold_to_Email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Payment_Method_Title']"
										},
										"sink": {
											"name": "WC_PaymentMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Order_Subtotal']"
										},
										"sink": {
											"name": "WC_OrderSubTotal",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['Shipping_Method_Title']"
										},
										"sink": {
											"name": "WC_Shipping_Method_Title",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Order_Shipping']"
										},
										"sink": {
											"name": "WC_OrderShipping",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['Order_Refund']"
										},
										"sink": {
											"name": "WC_OrderRefund",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['Order_Total']"
										},
										"sink": {
											"name": "WC_OrderTotal",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['Order_Total_Tax']"
										},
										"sink": {
											"name": "WC_OrderTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['Customer_ID']"
										},
										"sink": {
											"name": "Customer_ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['Products']"
										},
										"sink": {
											"name": "JSON_Products",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Orders']['Order']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderXMLInputSFTP",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable_Temp_Order",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "UpdateOrder",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Order Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateOrder]"
						},
						"linkedServiceName": {
							"referenceName": "KalmeshPC_SQLserver",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Archive and Delete Order File",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "UpdateOrder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "SftpWriteSettings",
									"operationTimeout": "01:00:00",
									"useTempFileRename": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceOrderXMLFile",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "OrderFileArchive",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceOrderXMLFile')]",
				"[concat(variables('factoryId'), '/datasets/OrderFileArchive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PP_CopyCustomers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SFTP to tempCustomer",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/customer-export.xml"
							},
							{
								"name": "Destination",
								"value": "dbo.Temp_BillingCustomer"
							}
						],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table dbo.Temp_BillingCustomer"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Customer_ID']"
										},
										"sink": {
											"name": "WC_CustomerId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Terms_Code']"
										},
										"sink": {
											"name": "WC_TermsCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Ship_Code']"
										},
										"sink": {
											"name": "WC_ShipCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Salesman']"
										},
										"sink": {
											"name": "WC_Salesman",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Tax_Code']"
										},
										"sink": {
											"name": "WC_TaxCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Price_Code']"
										},
										"sink": {
											"name": "WC_PriceCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Bill_To_ID']"
										},
										"sink": {
											"name": "WC_BillToID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_First_Name']"
										},
										"sink": {
											"name": "WC_BillingFirstName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Last_Name']"
										},
										"sink": {
											"name": "WC_BillingLastName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Address_1']"
										},
										"sink": {
											"name": "WC_BillingAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_State']"
										},
										"sink": {
											"name": "WC_BillingState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Postcode']"
										},
										"sink": {
											"name": "WC_BillingPostcode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Country']"
										},
										"sink": {
											"name": "WC_BillingCountry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Email']"
										},
										"sink": {
											"name": "WC_BillingEmail",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_Phone']"
										},
										"sink": {
											"name": "WC_BillingPhone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing']['Billing_City']"
										},
										"sink": {
											"name": "WC_BillingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Shipping']"
										},
										"sink": {
											"name": "JSON_Shipping",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Customers']['Customer']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_SFTP",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "PP_SqlServerTableTemp_BillingCustomer",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "UpdateCustomerAndShipToTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SFTP to tempCustomer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateCustomerAndShipTo]"
						},
						"linkedServiceName": {
							"referenceName": "PP_PPMONWOOCOMSQL1_SQLServer",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateBillingCustomers",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UpdateCustomerAndShipToTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateBillingCustomers]"
						},
						"linkedServiceName": {
							"referenceName": "PP_PPMONWOOCOMSQL1_SQLServer",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateShipToCustomers",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UpdateBillingCustomers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateShipToCustomers]"
						},
						"linkedServiceName": {
							"referenceName": "PP_PPMONWOOCOMSQL1_SQLServer",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Archive and Delete Customer File",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "UpdateShipToCustomers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "SftpWriteSettings",
									"operationTimeout": "01:00:00",
									"useTempFileRename": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CustomerInputFile",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerFileArchive",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CustomerInputFile')]",
				"[concat(variables('factoryId'), '/datasets/CustomerFileArchive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PP_CopyOrderPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Order Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table [dbo].[Temp_Order]"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Order_Number']"
										},
										"sink": {
											"name": "WC_OrderID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Order_Status']"
										},
										"sink": {
											"name": "WC_OrderStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Order_Date']"
										},
										"sink": {
											"name": "WC_Order_Date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Customer_Note']"
										},
										"sink": {
											"name": "WC_Note",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Bill_To_ID']"
										},
										"sink": {
											"name": "WC_CustomerBillToID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Ship_To_ID']"
										},
										"sink": {
											"name": "WC_CustomerShipToID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Ship_Code']"
										},
										"sink": {
											"name": "WC_ShipCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Salesman']"
										},
										"sink": {
											"name": "WC_Slsman",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Uf_Order_Code']"
										},
										"sink": {
											"name": "WC_OrderCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Billing_Email']"
										},
										"sink": {
											"name": "WC_Sold_to_Email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Payment_Method_Title']"
										},
										"sink": {
											"name": "WC_PaymentMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Order_Subtotal']"
										},
										"sink": {
											"name": "WC_OrderSubTotal",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['Shipping_Method_Title']"
										},
										"sink": {
											"name": "WC_Shipping_Method_Title",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Order_Shipping']"
										},
										"sink": {
											"name": "WC_OrderShipping",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['Order_Refund']"
										},
										"sink": {
											"name": "WC_OrderRefund",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['Order_Total']"
										},
										"sink": {
											"name": "WC_OrderTotal",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['Order_Total_Tax']"
										},
										"sink": {
											"name": "WC_OrderTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['Customer_ID']"
										},
										"sink": {
											"name": "Customer_ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['Products']"
										},
										"sink": {
											"name": "JSON_Products",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Orders']['Order']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderXMLInputSFTP",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "PP_TempOrder",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "UpdateOrder",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Order Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateOrder]"
						},
						"linkedServiceName": {
							"referenceName": "PP_PPMONWOOCOMSQL1_SQLServer",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Archive and Delete Order File",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "UpdateOrder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "SftpWriteSettings",
									"operationTimeout": "01:00:00",
									"useTempFileRename": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceOrderXMLFile",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "OrderFileArchive",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceOrderXMLFile')]",
				"[concat(variables('factoryId'), '/datasets/OrderFileArchive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerFileArchive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_WooComStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat('customer-export', '_', formatDateTime(utcnow(),'yyyy-MM-dd_HHmm'), '.xml')",
							"type": "Expression"
						},
						"folderPath": "/Archive"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerInputFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_WooComStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "customer-export.xml"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceOrderXMLFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_WooComStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "order-export.xml"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrderFileArchive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_WooComStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat('order-export', '_', formatDateTime(utcnow(),'yyyy-MM-dd_HHmm'), '.xml')",
							"type": "Expression"
						},
						"folderPath": "/Archive"
					}
				}
			},
			"dependsOn": []
		}
	]
}